load("../config.zen", "config_properties", "config_unit")
load("../units.zen", "Current", "Inductance")

# -----------------------------------------------------------------------------
# Component types
# -----------------------------------------------------------------------------

Package = enum("0201", "0402", "0603", "0805", "1206", "1210", "2010", "2512", "KICAD")
Mount = enum("SMD")

# -----------------------------------------------------------------------------
# Component parameters
# -----------------------------------------------------------------------------

# Required
package = config("package", Package)
value = config_unit("value", Inductance)
if package == Package("KICAD"):
    kicad_library = config("kicad_library", str, default="Inductor_SMD")
    kicad_package = config("kicad_package", str, default="L_0603_1608Metric")

# Optional
mount = config("mount", Mount, default=Mount("SMD"), optional=True)
current = config_unit("current", Current, optional=True)

# Properties â€“ combined and normalized
properties = config_properties(
    {
        "value": value,
        "package": package,
        "inductance": value,
        "current": current,
        "type": "inductor",
    }
)

# -----------------------------------------------------------------------------
# IO ports
# -----------------------------------------------------------------------------

P1 = io("P1", Net)
P2 = io("P2", Net)

# -----------------------------------------------------------------------------
# Helper functions
# -----------------------------------------------------------------------------


def _symbol(package: Package):
    return {
        "library": "@kicad-symbols/Device.kicad_sym",
        "name": "L",
    }


def _footprint(package: Package) -> str:
    """Returns the appropriate inductor footprint based on the package."""
    footprints = {
        Package("0201"): "@kicad-footprints/Inductor_SMD.pretty/L_0201_0603Metric.kicad_mod",
        Package("0402"): "@kicad-footprints/Inductor_SMD.pretty/L_0402_1005Metric.kicad_mod",
        Package("0603"): "@kicad-footprints/Inductor_SMD.pretty/L_0603_1608Metric.kicad_mod",
        Package("0805"): "@kicad-footprints/Inductor_SMD.pretty/L_0805_2012Metric.kicad_mod",
        Package("1206"): "@kicad-footprints/Inductor_SMD.pretty/L_1206_3216Metric.kicad_mod",
        Package("1210"): "@kicad-footprints/Inductor_SMD.pretty/L_1210_3225Metric.kicad_mod",
        Package("2010"): "@kicad-footprints/Inductor_SMD.pretty/L_2010_5025Metric.kicad_mod",
        Package("2512"): "@kicad-footprints/Inductor_SMD.pretty/L_2512_6332Metric.kicad_mod",
    }

    if package not in footprints:
        error("Invalid package: " + str(package))

    return footprints[package]


# -----------------------------------------------------------------------------
# Component definition
# -----------------------------------------------------------------------------

Component(
    name="L",
    symbol=Symbol(**_symbol(package)),
    footprint=File(_footprint(package))
    if package != Package("KICAD")
    else File(f"@kicad-footprints/{kicad_library}.pretty/{kicad_package}.kicad_mod"),
    prefix="L",
    pins={
        "1": P1,
        "2": P2,
    },
    spice_model=SpiceModel(
        "//simulation/Inductor.lib",
        "L",
        nets=[P1, P2],
        args={"LVAL": str(value.value)},
    ),
    properties=properties,
    type="inductor",
)
