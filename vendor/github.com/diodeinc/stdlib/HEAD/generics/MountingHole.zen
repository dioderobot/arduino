load("../config.zen", "config_properties")
load("../units.zen", "unit")
load("../utils.zen", "format_value")

# -----------------------------------------------------------------------------
# Component types
# -----------------------------------------------------------------------------

Diameter = enum("M2", "M2.5", "M3", "M4", "M5", "M6", "M8")
Standard = enum("DIN965", "ISO14580")
Plating = enum("TopBottom", "TopOnly", "Via")

# -----------------------------------------------------------------------------
# Component parameters
# -----------------------------------------------------------------------------

diameter = config("diameter", Diameter, convert=Diameter)
standard = config("standard", Standard, default=Standard("DIN965"), convert=Standard, optional=True)
plating = config("plating", Plating, default=Plating("TopBottom"), convert=Plating, optional=True)

# Properties â€“ combined and normalized
properties = config_properties(
    {
        "value": format_value(diameter, standard, plating),
        "diameter": diameter,
        "standard": standard,
        "plating": plating,
        "do_not_populate": True,
        "exclude_from_bom": True,
    }
)

# -----------------------------------------------------------------------------
# IO ports
# -----------------------------------------------------------------------------

P1 = io("P1", Net, optional=True)

# -----------------------------------------------------------------------------
# Helper functions
# -----------------------------------------------------------------------------


def _symbol(diameter: Diameter, standard: Standard | None = None, plating: Plating | None = None) -> dict:
    return {
        "library": "@kicad-symbols/Mechanical.kicad_sym",
        "name": "MountingHole_Pad",
    }


def _footprint(diameter: Diameter, standard: Standard | None = None, plating: Plating | None = None) -> str:
    """
    Returns the appropriate mounting hole footprint based on the parameters.

    Parameters:
    - diameter: The screw diameter (M2, M2.5, etc.)
    - standard: Optional screw head standard (DIN965, ISO14580)
    - plating: Optional plating type for the hole

    Returns:
    - Footprint path string
    """

    size = "0"
    if diameter == Diameter("M2"):
        size = "2.2mm"
    elif diameter == Diameter("M2.5"):
        size = "2.7mm"
    elif diameter == Diameter("M3"):
        size = "3.2mm"
    elif diameter == Diameter("M4"):
        size = "4.3mm"
    elif diameter == Diameter("M5"):
        size = "5.3mm"
    elif diameter == Diameter("M6"):
        size = "6.4mm"
    elif diameter == Diameter("M8"):
        size = "8.4mm"
    else:
        error("Invalid diameter: " + str(diameter))

    plating_str = ""
    if plating == Plating("TopBottom"):
        plating_str = "_Pad_TopBottom"
    elif plating == Plating("TopOnly"):
        plating_str = "_Pad_TopOnly"
    elif plating == Plating("Via"):
        plating_str = ""
    else:
        error("Invalid plating: " + str(plating))

    if diameter == Diameter("M6") or diameter == Diameter("M8"):
        footprint_str = (
            "@kicad-footprints/MountingHole.pretty/MountingHole_"
            + size
            + "_"
            + str(diameter.value)
            + plating_str
            + ".kicad_mod"
        )
    else:
        footprint_str = (
            "@kicad-footprints/MountingHole.pretty/MountingHole_"
            + size
            + "_"
            + str(diameter.value)
            + "_"
            + str(standard.value)
            + plating_str
            + ".kicad_mod"
        )
    return footprint_str


# -----------------------------------------------------------------------------
# Component definition
# -----------------------------------------------------------------------------

Component(
    name="MH",
    symbol=Symbol(**_symbol(diameter, standard, plating)),
    footprint=File(_footprint(diameter, standard, plating)),
    prefix="H",
    pins={
        "1": P1,
    },
    properties=properties,
)
